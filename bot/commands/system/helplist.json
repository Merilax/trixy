{
    "commented_entry": {
        "t": "A random comment.",
        "d": "How did you find this?",
        "u": "A curious one, are you?"
    },

    "guildcolor": {
        "t": "Guildcolor.",
        "d": "Changes the color assigned to your embeds in a specific guild. Personal user colors have priority over guild colors.",
        "u": "`guildcolor (hex_color)`"
    },
    "help": {
        "t": "You are a funny one, are you?",
        "d": "I appreciate your curiosity, but there is nothing to find here!",
        "u": "`help (command)`"
    },
    "invite": {
        "t": "Invite.",
        "d": "Shares an invite with you to add trixy to a server.",
        "u": "`invite`"
    },
    "levelsystem": {
        "t": "Levelsystem, aka `lvlsys`, `xpsystem`, `xpsys`.",
        "d": "Enables or disables the leveling system in a guild.",
        "u": "`levelsystem ('enable' | 'disable')`"
    },
    "suggest": {
        "t": "Suggest.",
        "d": "Sends your feedback directly to the support server.",
        "u": "`suggest (message)`"
    },
    "ping": {
        "t": "Ping, aka `latency`.",
        "d": "Gets Trixy's API ping and the message endpoint ping.",
        "u": "`ping`"
    },
    "prefix": {
        "t": "Prefix.",
        "d": "Sets a custom bot prefix for the server. Append `reset` as the command argument to get rid of the custom prefix. Both custom and original prefix will work simultaneously.",
        "u": "`prefix (newprefix | 'reset')`"
    },
    "usercolor": {
        "t": "Usercolor.",
        "d": "Changes the color assigned to your embeds.",
        "u": "`usercolor (hex_color)`"
    },



    "prune": {
        "t": "Prune, aka `purge`, `delete`, `bulk`.",
        "d": "Deletes from 1 to 100 messages in the given chat, as long as it's a server channel.",
        "u": "`prune (number)`"
    },
    "kick": {
        "t": "Kick.",
        "d": "Kicks a member.",
        "u": "`kick (@member)`"
    },
    "ban": {
        "t": "Ban.",
        "d": "Bans a member.",
        "u": "`ban (@member) [reason]`"
    },
    "mute": {
        "t": "Mute.",
        "d": "Mutes a member for a given ammount of time in minutes. Mutes without time don't expire.",
        "u": "`mute [minutes] (@member)`"
    },
    "unmute": {
        "t": "Unmute.",
        "d": "Unmutes a member.",
        "u": "`unmute (@member)`"
    },
    "addrole": {
        "t": "Addrole, aka `add`.",
        "d": "Adds a role to a member. Case sensitive.",
        "u": "`addrole (@member) (role_name | role_id | @role)`"
    },
    "removerole": {
        "t": "Removerole, aka `remove`.",
        "d": "Removes a role from a member. Case sensitive.",
        "u": "`removerole (@member) (role_name | role_id | @role)`"
    },



    "roll": {
        "t": "Roll, aka `dice`, `random`.",
        "d": "Rolls a dice with the given amount of sides, even negatives, because why not!",
        "u": "`roll (number)`"
    },
    "bird": {
        "t": "Bird, aka `birb`.",
        "d": "Gets a random image of a bird.",
        "u": "`bird`"
    },
    "cat": {
        "t": "Cat, aka `kitty`.",
        "d": "Gets a random image of a cat.",
        "u": "`cat`"
    },
    "cosmos": {
        "t": "Cosmos, aka `space`.",
        "d": "Gets the daily space image from NASA.",
        "u": "`cosmos`"
    },
    "dog": {
        "t": "Dog, aka `puppy`, `doggy`, `doggo`.",
        "d": "Gets a random image of a dog.",
        "u": "`dog`"
    },
    "fact": {
        "t": "Fact.",
        "d": "Gets a random fact.",
        "u": "`fact`"
    },
    "fox": {
        "t": "Fox, aka `foxy`.",
        "d": "Gets a random image of a fox.",
        "u": "`fox`"
    },



    "avatar": {
        "t": "Avatar.",
        "d": "Gets the avatar of the mentioned user.",
        "u": "`avatar [@member]`"
    },
    "remind": {
        "t": "Remind, aka `remindme`, `note`.",
        "d": "DMs you a reminder of something after a given amount of time in minutes.",
        "u": "`remind (number) (message)`"
    },
    "server": {
        "t": "Server, aka `serverinfo`.",
        "d": "Gets the properties of a server. Gets the role list if `roles` is used as an argument.",
        "u": "`server [roles]`"
    },
    "user": {
        "t": "User, aka `userinfo`, `whois`.",
        "d": "Gets the properties of an user",
        "u": "`user [@member]`"
    },
    "weather": {
        "t": "Weather.",
        "d": "Gets the current weather of a city, powered by [openweather](https://api.openweathermap.org).",
        "u": "`weather (city)`"
    },



    "addreward": {
        "t": "Addreward, aka `addr`, `ar`.",
        "d": "Adds a role to the list of rewardable roles, to be given at a specified XP level by the levelling system. Only one role can be rewarded per XP level. Using this command on an already added role will update it's required XP level.",
        "u": "`addreward (role_id) (level)`"
    },
    "leaderboard": {
        "t": "Leaderboard, aka `lb`, `levels`.",
        "d": "Shows the top 10 users by XP level and XP points in the guild.",
        "u": "`leaderboard`"
    },
    "level": {
        "t": "Level, aka `lvl`, `rank`, `xp`.",
        "d": "Gets someone's XP level and XP points.",
        "u": "`level [@member]`"
    },
    "levelchannel": {
        "t": "Levelchannel, aka `setchannel`, `lvlchannel`, `setch`, `lvlch`.",
        "d": "Desigantes a channel for Trixy to announce member level-ups. Append `reset` to disable this behaviour.",
        "u": "`levelchannel (channel_id | 'reset')`"
    },
    "leveldelete": {
        "t": "Leveldelete, aka `lvldelete`, `rankdelete`.",
        "d": "Erases a member from the guild's level database.",
        "u": "`leveldelete (user_id)`"
    },
    "removereward": {
        "t": "Removereward, aka `remover`, `rr`.",
        "d": "Removes a role from the reward list. If you only want to change the target XP level, use `addreward` instead.",
        "u": "`removereward (role_id)`"
    },
    "rewardlist": {
        "t": "Rewardlist, aka `rlist`, `rl`.",
        "d": "Shows all the reward roles set for the guild.",
        "u": "`rewardlist`"
    },
    "rewardtype": {
        "t": "Rewardstack, aka `rtype`, `rt`.",
        "d": "Dictates the behaviour for reward roles. By default set to `true`. If `true`, roles will stack up. If `false`, only the top reward role will be kept, and the rest, removed.",
        "u": "`rewardstack (true | false)`"
    }
}